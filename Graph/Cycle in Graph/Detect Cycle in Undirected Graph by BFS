#include<bits/stdc++.h>
using namespace std;
const int N = 1e5 + 9;
vector<int>g[N];
bool vis[N];
bool checkCycleByBFS(int u){
     queue<pair<int,int> > q;
      q.push(make_pair(u,-1));
      vis[u]=true;
      while(!q.empty()){
        int parent = q.front().second;
        int node = q.front().first;
        q.pop();
        for(auto v : g[node]){
            if(!vis[v]){
               q.push(make_pair(v,node));
               vis[v] = true;
            }
            else if(v!=parent) return true;
        }
      }

     return false;
}
int main(){
  int n,m;
  cin>>n>>m;
  while(m--){
    int u,v;
    cin>>u>>v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  
  for(int i=1;i<=n;i++){
    if(!vis[i]){
        if(checkCycleByBFS(i))  {
          cout<<"There is Cycle\n";
          return 0;
        }
    }
  }
  cout<<"There is no Cycle\n";
}

